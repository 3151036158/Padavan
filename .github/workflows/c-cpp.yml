name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: sh rom_buid.sh 
    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: dist-without-markdown
    #     path: |
    #       /home/runner/work/Padavan/Padavan/trunk/images/MI-NANO_3.4.3.9-099.trx
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/Padavan/Padavan/trunk/images/MI-NANO_3.4.3.9-099.trx
        asset_name: mi_nano_3.4.3.9-099.trx
        asset_content_type: application/zip
